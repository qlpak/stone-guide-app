name: Backend + AI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Run tests with coverage
        run: |
          cd backend
          npm test -- --coverage --maxWorkers=2

      - name: Check if coverage is 100%
        run: |
          cd backend
          if [ ! -f coverage/coverage-final.json ]; then
            echo "coverage-final.json not found!"
            exit 1
          fi
          TOTAL_COVERAGE=$(node -e "
          const coverage = require('./coverage/coverage-final.json');
          let totalStatements = 0, coveredStatements = 0;
          Object.values(coverage).forEach(file => {
            if (file.s) {
              totalStatements += Object.keys(file.s).length; 
              coveredStatements += Object.values(file.s).filter(count => count > 0).length;
            }
          });
          console.log(((coveredStatements / totalStatements) * 100).toFixed(2));
          ")
          echo "Total Statements Coverage: $TOTAL_COVERAGE%"
          if (( $(echo \"$TOTAL_COVERAGE < 100\" | bc -l) )); then
            echo "Code coverage is below 100%! Failing pipeline."
            exit 1
          else
            echo "Code coverage is 100%. Proceeding..."
          fi

  ai-test:
    name: AI Module Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd ai-module
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run AI tests with coverage
        run: |
          cd ai-module
          PYTHONPATH=. pytest --cov=app --cov-report term-missing tests/

      - name: Check if AI module coverage is 100%
        run: |
          cd ai-module
          TOTAL_COVERAGE=$(PYTHONPATH=. pytest --cov=app --cov-report=term tests/ | tee result.log | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
          cat result.log
          echo "AI Module Coverage: $TOTAL_COVERAGE%"
          if (( $(echo "$TOTAL_COVERAGE < 100" | bc -l) )); then
            echo "AI module coverage is below 100%! Failing pipeline."
            exit 1
          else
            echo "AI module coverage is 100%"
          fi